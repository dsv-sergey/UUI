{"object":"value","document":{"object":"document","data":{},"nodes":[{"object":"block","type":"paragraph","data":{},"nodes":[{"object":"text","text":"ApiContext along with ErrorHandler component provides solution to deal with various errors which can be occurred during API calls. The following cases are handled:","marks":[]}]},{"object":"block","type":"unordered-list","data":{},"nodes":[{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"403, 404, 500 or other error status is returned from the server. ErrorContext replaces their children with appropriate error screen.","marks":[]}]}]},{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"Network and server failures. APIContext will start pinging /auth/ping endpoint until get OK. Then it will retry failed requests. Splash screen will be shown until network connection is recovered.","marks":[]}]}]},{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"JavaScript errors in React components lifecycle (using","marks":[]},{"object":"text","text":" ","marks":[{"object":"mark","type":"uui-richTextEditor-span-mark","data":{"style":{}}}]},{"object":"inline","type":"link","data":{"url":"https://reactjs.org/docs/react-component.html#componentdidcatch"},"nodes":[{"object":"text","text":"onComponentDidCatch","marks":[]}]},{"object":"text","text":" ","marks":[{"object":"mark","type":"uui-richTextEditor-span-mark","data":{"style":{}}}]},{"object":"text","text":"API). ","marks":[]},{"object":"inline","type":"link","data":{"url":null},"nodes":[{"object":"text","text":"","marks":[]}]},{"object":"text","text":"","marks":[]}]}]},{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"Authentication lost scenario. The server is required to return 401 with the custom 'x-session-lost: true' header if auth cookie is not found or invalid during XHR call. This is required because ordinary login redirect responses can't be detected from JS during XHR calls. ApiContext will open /auth/login page in such case. The page should process the usual login process before opening. After auth process is finished, the page is opening and and script inside it should send Cross Window Message to the app. See example implementation here: ","marks":[]},{"object":"inline","type":"link","data":{"url":"https://learn.epam.com/auth/login"},"nodes":[{"object":"text","text":"https://learn.epam.com/auth/login","marks":[]}]},{"object":"text","text":" \nUpon receiving the message, failed requests are retried. Splash screen will be shown until the problem is recovered.","marks":[]}]}]},{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"In all cases, error is logged via AnalyticsContext.","marks":[]}]}]}]},{"object":"block","type":"paragraph","data":{},"nodes":[{"object":"text","text":"On navigation (e.g. clicking a main menu item), and errors are discarded, and all pending API calls are cancelled. Also, we close all modal windows on any JS/API error. ","marks":[]}]}]}}