{"object":"value","document":{"object":"document","data":{},"nodes":[{"object":"block","type":"paragraph","data":{},"nodes":[{"object":"text","text":"Lock context provide functionality to resolve problems when something need to take control(Lock), and execute some action when something try to take over control(Lock) for itself.  ","marks":[]}]},{"object":"block","type":"paragraph","data":{},"nodes":[{"object":"text","text":"In UUI it widely used with forms, for cases when user try to leave form with unsaved changes or trigger some action which depending on saved  form results and it's required to save form before this action(in lock context terminology - try to acquire lock).","marks":[]}]},{"object":"block","type":"uui-richTextEditor-header-2","data":{},"nodes":[{"object":"text","text":"API","marks":[]}]},{"object":"block","type":"unordered-list","data":{},"nodes":[{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"acquire(tryRelease?: () => Promise<any>): Promise<Lock>","marks":[{"object":"mark","type":"uui-richTextEditor-code","data":{}}]},{"object":"text","text":" — try to take a lock, and set tryRelease callback, which will be invoked when something will try to take over control. If lock already exist, it try to release current lock and then set new one;\n","marks":[]}]}]},{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"getCurrentLock(): Lock","marks":[{"object":"mark","type":"uui-richTextEditor-code","data":{}}]},{"object":"text","text":" — return current lock;\n","marks":[]}]}]}]},{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"tryRelease()","marks":[{"object":"mark","type":"uui-richTextEditor-code","data":{}}]},{"object":"text","text":" — try to release current lock, by calling ","marks":[]},{"object":"text","text":"tryRelease","marks":[{"object":"mark","type":"uui-richTextEditor-code","data":{}}]},{"object":"text","text":" callback which was passed to ","marks":[]},{"object":"text","text":"acquire","marks":[{"object":"mark","type":"uui-richTextEditor-code","data":{}}]},{"object":"text","text":" function;","marks":[]}]},{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"","marks":[]}]}]}]},{"object":"block","type":"list-item","data":{},"nodes":[{"object":"block","type":"list-item-child","data":{},"nodes":[{"object":"text","text":"release()","marks":[{"object":"mark","type":"uui-richTextEditor-code","data":{}}]},{"object":"text","text":" — release lock without calling ","marks":[]},{"object":"text","text":"tryRelease","marks":[{"object":"mark","type":"uui-richTextEditor-code","data":{}}]},{"object":"text","text":" callback;","marks":[]}]}]}]}]}}